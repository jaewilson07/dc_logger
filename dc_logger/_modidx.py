# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/dc_logger',
                'doc_host': 'https://jaewilson07.github.io',
                'git_url': 'https://github.com/jaewilson07/dc_logger',
                'lib_path': 'dc_logger'},
  'syms': { 'dc_logger.client.Log': { 'dc_logger.client.Log.Correlation': ('client/log.html#correlation', 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.Correlation.to_dict': ( 'client/log.html#correlation.to_dict',
                                                                                    'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager': ( 'client/log.html#correlationmanager',
                                                                                   'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager.__init__': ( 'client/log.html#correlationmanager.__init__',
                                                                                            'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager.generate_request_id': ( 'client/log.html#correlationmanager.generate_request_id',
                                                                                                       'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager.generate_session_id': ( 'client/log.html#correlationmanager.generate_session_id',
                                                                                                       'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager.generate_span_id': ( 'client/log.html#correlationmanager.generate_span_id',
                                                                                                    'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager.generate_trace_id': ( 'client/log.html#correlationmanager.generate_trace_id',
                                                                                                     'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager.get_current_context': ( 'client/log.html#correlationmanager.get_current_context',
                                                                                                       'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager.set_context_value': ( 'client/log.html#correlationmanager.set_context_value',
                                                                                                     'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.CorrelationManager.start_request': ( 'client/log.html#correlationmanager.start_request',
                                                                                                 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.HTTPDetails': ('client/log.html#httpdetails', 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.HTTPDetails.from_kwargs': ( 'client/log.html#httpdetails.from_kwargs',
                                                                                        'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.HTTPDetails.to_dict': ( 'client/log.html#httpdetails.to_dict',
                                                                                    'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntity': ('client/log.html#logentity', 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntity.from_any': ( 'client/log.html#logentity.from_any',
                                                                                   'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntity.get_info_from_parent': ( 'client/log.html#logentity.get_info_from_parent',
                                                                                               'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntity.to_dict': ( 'client/log.html#logentity.to_dict',
                                                                                  'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntry': ('client/log.html#logentry', 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntry._serialize_http_details': ( 'client/log.html#logentry._serialize_http_details',
                                                                                                 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntry.create': ( 'client/log.html#logentry.create',
                                                                                'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntry.to_dict': ( 'client/log.html#logentry.to_dict',
                                                                                 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogEntry.to_json': ( 'client/log.html#logentry.to_json',
                                                                                 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogLevel': ('client/log.html#loglevel', 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogLevel.from_string': ( 'client/log.html#loglevel.from_string',
                                                                                     'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.LogLevel.should_log': ( 'client/log.html#loglevel.should_log',
                                                                                    'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.MultiTenant': ('client/log.html#multitenant', 'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.MultiTenant.from_kwargs': ( 'client/log.html#multitenant.from_kwargs',
                                                                                        'dc_logger/client/Log.py'),
                                      'dc_logger.client.Log.MultiTenant.to_dict': ( 'client/log.html#multitenant.to_dict',
                                                                                    'dc_logger/client/Log.py')},
            'dc_logger.client.base': { 'dc_logger.client.base.LogHandler': ('client/base.html#loghandler', 'dc_logger/client/base.py'),
                                       'dc_logger.client.base.LogHandler.__post_init__': ( 'client/base.html#loghandler.__post_init__',
                                                                                           'dc_logger/client/base.py'),
                                       'dc_logger.client.base.LogHandler.close': ( 'client/base.html#loghandler.close',
                                                                                   'dc_logger/client/base.py'),
                                       'dc_logger.client.base.LogHandler.flush': ( 'client/base.html#loghandler.flush',
                                                                                   'dc_logger/client/base.py'),
                                       'dc_logger.client.base.LogHandler.validate_config': ( 'client/base.html#loghandler.validate_config',
                                                                                             'dc_logger/client/base.py'),
                                       'dc_logger.client.base.LogHandler.write': ( 'client/base.html#loghandler.write',
                                                                                   'dc_logger/client/base.py'),
                                       'dc_logger.client.base.Logger': ('client/base.html#logger', 'dc_logger/client/base.py'),
                                       'dc_logger.client.base.Logger.validate_configs': ( 'client/base.html#logger.validate_configs',
                                                                                          'dc_logger/client/base.py'),
                                       'dc_logger.client.base.LoggerSettings': ( 'client/base.html#loggersettings',
                                                                                 'dc_logger/client/base.py'),
                                       'dc_logger.client.base.ServiceConfig': ( 'client/base.html#serviceconfig',
                                                                                'dc_logger/client/base.py'),
                                       'dc_logger.client.base.ServiceConfig.__post_init__': ( 'client/base.html#serviceconfig.__post_init__',
                                                                                              'dc_logger/client/base.py'),
                                       'dc_logger.client.base.ServiceConfig.validate_config': ( 'client/base.html#serviceconfig.validate_config',
                                                                                                'dc_logger/client/base.py'),
                                       'dc_logger.client.base.ServiceHandler': ( 'client/base.html#servicehandler',
                                                                                 'dc_logger/client/base.py'),
                                       'dc_logger.client.base.ServiceHandler.close': ( 'client/base.html#servicehandler.close',
                                                                                       'dc_logger/client/base.py'),
                                       'dc_logger.client.base.ServiceHandler.flush': ( 'client/base.html#servicehandler.flush',
                                                                                       'dc_logger/client/base.py'),
                                       'dc_logger.client.base.ServiceHandler.validate_config': ( 'client/base.html#servicehandler.validate_config',
                                                                                                 'dc_logger/client/base.py'),
                                       'dc_logger.client.base.ServiceHandler.write': ( 'client/base.html#servicehandler.write',
                                                                                       'dc_logger/client/base.py')},
            'dc_logger.client.exceptions': { 'dc_logger.client.exceptions.DC_LoggingError': ( 'client/exceptions.html#dc_loggingerror',
                                                                                              'dc_logger/client/exceptions.py'),
                                             'dc_logger.client.exceptions.LogConfigError': ( 'client/exceptions.html#logconfigerror',
                                                                                             'dc_logger/client/exceptions.py'),
                                             'dc_logger.client.exceptions.LogFlushError': ( 'client/exceptions.html#logflusherror',
                                                                                            'dc_logger/client/exceptions.py'),
                                             'dc_logger.client.exceptions.LogHandlerError': ( 'client/exceptions.html#loghandlererror',
                                                                                              'dc_logger/client/exceptions.py'),
                                             'dc_logger.client.exceptions.LogWriteError': ( 'client/exceptions.html#logwriteerror',
                                                                                            'dc_logger/client/exceptions.py')},
            'dc_logger.configs.cloud': { 'dc_logger.configs.cloud.AWSCloudWatch_ServiceConfig': ( 'configs/cloud.html#awscloudwatch_serviceconfig',
                                                                                                  'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.AWSCloudWatch_ServiceConfig.to_platform_config': ( 'configs/cloud.html#awscloudwatch_serviceconfig.to_platform_config',
                                                                                                                     'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.AWSCloudWatch_ServiceConfig.validate_config': ( 'configs/cloud.html#awscloudwatch_serviceconfig.validate_config',
                                                                                                                  'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.AzureLogAnalytics_ServiceConfig': ( 'configs/cloud.html#azureloganalytics_serviceconfig',
                                                                                                      'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.AzureLogAnalytics_ServiceConfig.to_platform_config': ( 'configs/cloud.html#azureloganalytics_serviceconfig.to_platform_config',
                                                                                                                         'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.AzureLogAnalytics_ServiceConfig.validate_config': ( 'configs/cloud.html#azureloganalytics_serviceconfig.validate_config',
                                                                                                                      'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.CloudServiceConfig': ( 'configs/cloud.html#cloudserviceconfig',
                                                                                         'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.CloudServiceConfig.to_platform_config': ( 'configs/cloud.html#cloudserviceconfig.to_platform_config',
                                                                                                            'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.Datadog_ServiceConfig': ( 'configs/cloud.html#datadog_serviceconfig',
                                                                                            'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.Datadog_ServiceConfig.to_platform_config': ( 'configs/cloud.html#datadog_serviceconfig.to_platform_config',
                                                                                                               'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.Datadog_ServiceConfig.validate_config': ( 'configs/cloud.html#datadog_serviceconfig.validate_config',
                                                                                                            'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.GCPLogging_ServiceConfig': ( 'configs/cloud.html#gcplogging_serviceconfig',
                                                                                               'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.GCPLogging_ServiceConfig.to_platform_config': ( 'configs/cloud.html#gcplogging_serviceconfig.to_platform_config',
                                                                                                                  'dc_logger/configs/cloud.py'),
                                         'dc_logger.configs.cloud.GCPLogging_ServiceConfig.validate_config': ( 'configs/cloud.html#gcplogging_serviceconfig.validate_config',
                                                                                                               'dc_logger/configs/cloud.py')},
            'dc_logger.configs.console': { 'dc_logger.configs.console.Console_ServiceConfig': ( 'configs/console.html#console_serviceconfig',
                                                                                                'dc_logger/configs/console.py'),
                                           'dc_logger.configs.console.Console_ServiceConfig.validate_config': ( 'configs/console.html#console_serviceconfig.validate_config',
                                                                                                                'dc_logger/configs/console.py')},
            'dc_logger.logs.services.cloud.datadog': { 'dc_logger.logs.services.cloud.datadog.DatadogHandler': ( 'services/cloud/datadog.html#datadoghandler',
                                                                                                                 'dc_logger/logs/services/cloud/datadog.py'),
                                                       'dc_logger.logs.services.cloud.datadog.DatadogHandler.__init__': ( 'services/cloud/datadog.html#datadoghandler.__init__',
                                                                                                                          'dc_logger/logs/services/cloud/datadog.py'),
                                                       'dc_logger.logs.services.cloud.datadog.DatadogHandler._convert_log_level': ( 'services/cloud/datadog.html#datadoghandler._convert_log_level',
                                                                                                                                    'dc_logger/logs/services/cloud/datadog.py'),
                                                       'dc_logger.logs.services.cloud.datadog.DatadogHandler._get_hostname': ( 'services/cloud/datadog.html#datadoghandler._get_hostname',
                                                                                                                               'dc_logger/logs/services/cloud/datadog.py'),
                                                       'dc_logger.logs.services.cloud.datadog.DatadogHandler._safe_serialize': ( 'services/cloud/datadog.html#datadoghandler._safe_serialize',
                                                                                                                                 'dc_logger/logs/services/cloud/datadog.py'),
                                                       'dc_logger.logs.services.cloud.datadog.DatadogHandler._send_logs_simple_api': ( 'services/cloud/datadog.html#datadoghandler._send_logs_simple_api',
                                                                                                                                       'dc_logger/logs/services/cloud/datadog.py'),
                                                       'dc_logger.logs.services.cloud.datadog.DatadogHandler._send_to_cloud': ( 'services/cloud/datadog.html#datadoghandler._send_to_cloud',
                                                                                                                                'dc_logger/logs/services/cloud/datadog.py'),
                                                       'dc_logger.logs.services.cloud.datadog.DatadogHandler._validate_config': ( 'services/cloud/datadog.html#datadoghandler._validate_config',
                                                                                                                                  'dc_logger/logs/services/cloud/datadog.py')},
            'dc_logger.logs.services.console': {},
            'dc_logger.services.base': { 'dc_logger.services.base.CloudHandler': ( 'services/base.html#cloudhandler',
                                                                                   'dc_logger/services/base.py'),
                                         'dc_logger.services.base.CloudHandler._send_to_cloud': ( 'services/base.html#cloudhandler._send_to_cloud',
                                                                                                  'dc_logger/services/base.py'),
                                         'dc_logger.services.base.CloudHandler.write': ( 'services/base.html#cloudhandler.write',
                                                                                         'dc_logger/services/base.py'),
                                         'dc_logger.services.base.ConsoleHandler': ( 'services/base.html#consolehandler',
                                                                                     'dc_logger/services/base.py'),
                                         'dc_logger.services.base.ConsoleHandler._write_json': ( 'services/base.html#consolehandler._write_json',
                                                                                                 'dc_logger/services/base.py'),
                                         'dc_logger.services.base.ConsoleHandler._write_text': ( 'services/base.html#consolehandler._write_text',
                                                                                                 'dc_logger/services/base.py'),
                                         'dc_logger.services.base.ConsoleHandler.flush': ( 'services/base.html#consolehandler.flush',
                                                                                           'dc_logger/services/base.py'),
                                         'dc_logger.services.base.ConsoleHandler.write': ( 'services/base.html#consolehandler.write',
                                                                                           'dc_logger/services/base.py')}}}
