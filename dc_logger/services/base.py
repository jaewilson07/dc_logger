"""Base configuration classes and utilities for the logging library."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/logs/services/base.ipynb.

# %% auto 0
__all__ = ['LogHandler']

# %% ../../nbs/logs/services/base.ipynb 2
from ..client.exceptions import LogConfigError

# %% ../../nbs/logs/services/base.ipynb 3
from enum import Enum
import os
from typing import Optional, List, Dict, Any, Literal
from dataclasses import dataclass, field
from abc import ABC, abstractmethod

# %% ../../nbs/logs/services/base.ipynb 4
#| export






# %% ../../nbs/logs/services/base.ipynb 5
class LogHandler(ABC):
    """Base class for log handlers"""

    def __init__(self, config: LogConfig):
        self.config = config

    @abstractmethod
    async def write(self, entries: List[Log]) -> bool:
        """Write log entries to destination"""
        pass

    @abstractmethod
    async def flush(self) -> bool:
        """Flush any buffered entries"""
        pass

    async def close(self):
        """Clean up resources"""
        pass
